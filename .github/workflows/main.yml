name: Run OI Analysis Script

on:
  repository_dispatch:
    types: [on-demand-test]
    
  # 手動実行も可能にする
  workflow_dispatch:

jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    
    # このブロックを追加して、リポジトリへの書き込み権限を与える
    permissions:
      contents: write

    steps:
      # 1. リポジトリのコードをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Python環境をセットアップ
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3. 必要なライブラリをインストール
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Pythonスクリプトを実行
      - name: Run Python script
        env:
          API_KEY: ${{ secrets.API_KEY }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          DISCORD_CHANNEL_ID: ${{ secrets.DISCORD_CHANNEL_ID }}
        run: python main.py

      # 5. 生成されたグラフをリポジトリにコミット＆プッシュ
      - name: Commit and push updated charts
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # ★★★ 修正点1: pushの前にpullを実行してリモートとの競合を防ぐ
          git pull --rebase
          
          # ★★★ 修正点2: dataディレクトリ全体をaddして全てのチャートを対象にする
          git add data/
          
          # ファイルに変更があった場合のみコミットし、メッセージも変更
          git diff --staged --quiet || git commit -m "Update analysis charts"
          git push
